import"./CipherOutput-BKM2_HCe-KsvlRx8m.js";import{m as p,A as h}from"./decrypt-B3gSy60R-DH_nzEve.js";import{o as s}from"./CipherCard-BXukLyfh-BLEmzOo9.js";import m from"./KeyAutokey-Fn6F7D0y-D-yzUHh-.js";import{d as u,r as c,k as y,i as k,w as a,f as d,b as e,h as r,u as o}from"./index-Cj9FIklH.js";import"./_plugin-vue_export-helper-CHgC5LLL-lGy7RumW.js";import"./ScanLine-BgZgNptX-DPZCgxtK.js";import"./mixin-D8O0vS0M-DDdbQtdZ.js";const l=Object.freeze(Object.defineProperty({__proto__:null,decrypt:h,encrypt:p},Symbol.toStringTag,{value:"Module"})),B=u({__name:"AutokeyView",setup(g){const t=c({primer:"bytewalker"});return(x,i)=>(k(),y(s,{title:"Autokey Cipher","encrypt-algorithm":o(l).encrypt(t.value),"decrypt-algorithm":o(l).decrypt(t.value),"cipher-key":t.value},{theory:a(()=>i[1]||(i[1]=[e("p",null," Developed by Giovan Battista Bellaso in 1564, the Autokey cipher improves on Vigenère by using the plaintext itself as part of the key, making it harder to break with traditional methods. ",-1),e("h3",null,"How It Works",-1),e("p",null,' The key starts with a primer (short initial key), then extends with the plaintext. For example, with primer "Q" and plaintext "ATTACK": ',-1),e("div",{class:"cipher-example"},[r(" Plaintext: A T T A C K"),e("br"),r(" Key: Q A T T A C"),e("br"),r(" Ciphertext: Q T X T C O ")],-1),e("h3",null,"Mathematical Formula",-1),e("p",null,[r("Encryption: "),e("strong",null,"E(x_i) = (x_i + k_i) mod 26")],-1),e("p",null,[r(" Where "),e("strong",null,"k_i = primer_i (for i ≤ primer length) or x_{i-primer length} (for i > primer length)")],-1),e("h3",null,"Security",-1),e("p",null," More secure than Vigenère against Kasiski examination (no repeating key patterns), but vulnerable to known-plaintext attacks. ",-1)])),cipherKey:a(()=>[d(m,{"cipher-key":t.value,"onUpdate:cipherKey":i[0]||(i[0]=n=>t.value=n)},null,8,["cipher-key"])]),_:1},8,["encrypt-algorithm","decrypt-algorithm","cipher-key"]))}});export{B as default};
