import{m as p,p as s}from"./decrypt-COdIemEH-D05vMDt9.js";import"./CipherOutput-BKM2_HCe-KsvlRx8m.js";import{o as c}from"./CipherCard-BXukLyfh-BLEmzOo9.js";import u from"./KeyAffine-CPmVQM5o-BlTuP_BK.js";import{d as h,r as m,k as y,i as d,w as r,f,b as e,h as t,u as i}from"./index-Cj9FIklH.js";import"./_plugin-vue_export-helper-CHgC5LLL-lGy7RumW.js";import"./ScanLine-BgZgNptX-DPZCgxtK.js";import"./mixin-D8O0vS0M-DDdbQtdZ.js";const n=Object.freeze(Object.defineProperty({__proto__:null,decrypt:s,encrypt:p},Symbol.toStringTag,{value:"Module"})),A=h({__name:"AffineView",setup(b){const l=m({alpha:1,beta:1});return(g,a)=>(d(),y(c,{title:"Affine Cipher","encrypt-algorithm":i(n).encrypt(l.value),"decrypt-algorithm":i(n).decrypt(l.value),"cipher-key":l.value},{theory:r(()=>a[1]||(a[1]=[e("p",null," The Affine cipher is an advanced substitution cipher that combines multiplicative and additive encryption, dating back to ancient times. It generalizes the Caesar cipher by applying two mathematical operations. ",-1),e("h3",null,"How It Works",-1),e("p",null,[t(" Each letter is encrypted using a formula "),e("strong",null,"E(x) = (ax + b) mod 26"),t(", where: ")],-1),e("ul",null,[e("li",null,[e("strong",null,"a"),t(" must be coprime with 26 (e.g., 1, 3, 5, 7, 9, 11, 15, 17, 19, 21, 23, 25) ")]),e("li",null,[e("strong",null,"b"),t(" is the shift value (like in Caesar cipher)")])],-1),e("p",null,[t("Example with "),e("strong",null,"a=5, b=8"),t(":")],-1),e("div",{class:"cipher-example"},"A → I (0→8), B → N (1→13), C → S (2→18), ..., Z → H (25→7)",-1),e("h3",null,"Mathematical Formula",-1),e("p",null,[t("Encryption: "),e("strong",null,"E(x) = (a·x + b) mod 26")],-1),e("p",null,[t(" Decryption: "),e("strong",null,"D(y) = a⁻¹·(y - b) mod 26"),t(" (where a⁻¹ is the modular inverse of a) ")],-1),e("h3",null,"Security",-1),e("p",null," Slightly stronger than Caesar (312 possible keys vs. 25), but still vulnerable to frequency analysis and brute force (since it's monoalphabetic). ",-1)])),cipherKey:r(()=>[f(u,{cipherKey:l.value,"onUpdate:cipherKey":a[0]||(a[0]=o=>l.value=o)},null,8,["cipherKey"])]),_:1},8,["encrypt-algorithm","decrypt-algorithm","cipher-key"]))}});export{A as default};
