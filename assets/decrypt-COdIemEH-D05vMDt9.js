import{k as s,Z as u,D as i,F as h}from"./CipherOutput-BKM2_HCe-KsvlRx8m.js";function m(e){if(!(Number.isInteger(e.alpha)&&Number.isInteger(e.beta)))throw new Error("Both key values must be integers");if(s(e.alpha,26)!==1)throw new Error(`No inverse found for alpha value ${e.alpha}`);return u((r,n,o)=>{const t=i(r);return String.fromCharCode(h(e.alpha*(o.charCodeAt(n)-t)+e.beta,26)+t)})}function f(e){if(!Number.isInteger(e))throw new Error("Input value must be an integer");for(let r=1;r<26;r+=1)if(e*r%26===1)return r;return NaN}function b(e){if(!(Number.isInteger(e.alpha)&&Number.isInteger(e.beta)))throw new Error("Both key values must be integers");const r=f(e.alpha);if(Number.isNaN(r))throw new Error(`No inverse found for alpha value ${e.alpha}`);return u((n,o,t)=>{const a=i(n);return String.fromCharCode(h(r*(t.charCodeAt(o)-a-e.beta),26)+a)})}export{m,b as p};
