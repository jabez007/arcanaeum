import{r as b,a9 as d,B as o,J as y}from"./index-Cj9FIklH.js";function v(e,r,n={}){const u=b({}),h=(t,s)=>{const c=n[t]||[],a=[];for(const i of c){const l=i(s);l&&a.push(l)}return a};d(()=>{const t={};for(const s in e.cipherKey)Object.prototype.hasOwnProperty.call(n,s)&&(t[s]=h(s,e.cipherKey[s]));u.value=t});const g=t=>{const s=o({get:()=>e.cipherKey[t],set:l=>{const p=h(t,l);u.value[t]=p,p.length===0&&r("update:cipherKey",{...e.cipherKey,[t]:l})}}),c=o(()=>u.value[t]||[]),a=o(()=>c.value.length===0),i=o(()=>!a.value);return y({value:s,errors:c,isValid:a,hasError:i})},f=o(()=>{const t=Object.values(u.value).flat();return{isValid:t.length===0,errors:t}});return{createPropertyComputed:g,validation:f}}const M={required:e=>e==null||e===""?"This field is required":null,numberRange:(e,r)=>n=>typeof n!="number"||isNaN(n)?"Must be a valid number":n<e||n>r?`Must be between ${e} and ${r}`:null,minLength:e=>r=>typeof r!="string"?"Must be a string":r.length<e?`Must be at least ${e} characters long`:null,maxLength:e=>r=>typeof r!="string"?"Must be a string":r.length>e?`Must be no more than ${e} characters long`:null,pattern:(e,r)=>n=>typeof n!="string"?"Must be a string":e.test(n)?null:r};export{M,v as m};
